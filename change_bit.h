#pragma once

//==========================================================================
// Получение 32-х битного числа из потока байт по позиции (формат BIG ENDIAN)
// BIG ENDIAN - ПЕРВЫМ БАЙТ ПОТОКА БУДЕТ СТАРШИМ БАЙТОВ В ЧИСЛЕ
// Параметры:
//   ulong n  - 32-х битное число, в которое записываются данные
//   uchar* b - входной поток байт
//   ulong i  - позиция, с которой начинается чтение данных из входного потока
#ifndef GET_ULONG_BE
#define GET_ULONG_BE(n,b,i)                     \
{                                               \
    (n) = ( (unsigned long) (b)[(i)    ] << 24 )        \
        | ( (unsigned long) (b)[(i) + 1] << 16 )        \
        | ( (unsigned long) (b)[(i) + 2] <<  8 )        \
        | ( (unsigned long) (b)[(i) + 3]       );       \
}
#endif

//==========================================================================
// Запись 32-х битного числа в поток байт в нужной позиции (формат BIG ENDIAN)
// Параметры:
//   ulong n  - 32-х битное число, из которго читаются данные
//   uchar* b - выходной поток байт
//   ulong i  - позиция, с которой начинается запись данных в выходной поток
#ifndef PUT_ULONG_BE
#define PUT_ULONG_BE(n,b,i)                     \
{                                               \
    (b)[(i)    ] = (unsigned char) ( (n) >> 24 );       \
    (b)[(i) + 1] = (unsigned char) ( (n) >> 16 );       \
    (b)[(i) + 2] = (unsigned char) ( (n) >>  8 );       \
    (b)[(i) + 3] = (unsigned char) ( (n)       );       \
}
#endif